# This workflow will deploy Flask based Web Application usng steps such as ssh-deploy and ssh-action
# ssh-deploy is primarily to deploy the application on to the remote host
# ssh-action is primarily to run commands to install dependencies as well as start the application

name: Flask LMS Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "mastering-docker/lms"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
  build:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Setup and Start Flask Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          python3 -m pip install -r /apps/lms/requirements.txt
  run:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Setup and Start Flask Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          /home/lms/.local/bin/gunicorn --chdir /apps/lms/lms-app -w 2 --threads 2 -b 0.0.0.0:5000 -D main:app
          
